{"version":3,"sources":["App.js","index.js"],"names":["App","minutes","setMinutes","React","useState","seconds","setSeconds","isActive","setIsActive","mode","setMode","cycles","setCycles","volume","setVolume","showSettings","setShowSettings","lottieLoaded","setLottieLoaded","selectedSound","setSelectedSound","soundOptions","cough1","name","url","cough2","cough3","original","showNotification","title","body","Notification","permission","icon","audioRef","useRef","lottieContainerRef","workTime","setWorkTime","smokeTime","setSmokeTime","munchiesTime","setMunchiesTime","cyclesBeforeMunchies","setCyclesBeforeMunchies","lottieAnimations","work","smoke","munchies","useEffect","script","document","createElement","src","async","onload","appendChild","contains","removeChild","requestPermission","current","innerHTML","lottieElement","setAttribute","style","width","height","interval","setInterval","clearInterval","playAlarm","handleTimerComplete","play","newCycles","className","getBgColor","ref","getAccentColor","getModeIcon","role","aria-label","sec","toString","padStart","onClick","pauseTimer","startTimer","resetTimer","skipToNext","toggleSettings","type","value","onChange","e","parseInt","target","min","max","Object","keys","map","soundKey","key","id","checked","htmlFor","currentTime","testSound","Math","round","step","parseFloat","applySettings","formatTime","ReactDOM","createRoot","getElementById","render","StrictMode","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","catch","registrationError"],"mappings":"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","file":"static/js/main.5e72aa7c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App() {\n  const [minutes, setMinutes] = React.useState(25);\n  const [seconds, setSeconds] = React.useState(0);\n  const [isActive, setIsActive] = React.useState(false);\n  const [mode, setMode] = React.useState('work'); // 'work', 'smoke', 'munchies'\n  const [cycles, setCycles] = React.useState(1);\n  const [volume, setVolume] = React.useState(0.5);\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [lottieLoaded, setLottieLoaded] = React.useState(false);\n\n  // Sound options for alarm\n  const [selectedSound, setSelectedSound] = React.useState('cough1');\n  const soundOptions = {\n    cough1: {\n      name: \"Tos Fuerte\",\n      url: \"assets/cough1.mp3\"\n    },\n    cough2: {\n      name: \"Tos Suave\",\n      url: \"assets/cough3.mp3\"\n    },\n    cough3: {\n      name: \"Tos con Risa\",\n      url: \"assets/cough2.mp3\"\n    },\n    original: {\n      name: \"Alarma Original\",\n      url: \"https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3\"\n    }\n  };\n  \n  const showNotification = (title, body) => {\n    if (Notification.permission === \"granted\") {\n      new Notification(title, {\n        body: body,\n        icon: 'assets/logo192.png'\n      });\n    }\n  };\n\n  const audioRef = React.useRef(null);\n  const lottieContainerRef = React.useRef(null);\n\n  // Timer settings\n  const [workTime, setWorkTime] = React.useState(25);\n  const [smokeTime, setSmokeTime] = React.useState(5);\n  const [munchiesTime, setMunchiesTime] = React.useState(15);\n  const [cyclesBeforeMunchies, setCyclesBeforeMunchies] = React.useState(4);\n\n  // Custom Lottie animations provided by the user\n  const lottieAnimations = {\n    work: \"https://lottie.host/ac63b09d-caff-4fbb-8f96-0ad1820ac370/n3mYPG3Dow.lottie\",\n    smoke: \"https://lottie.host/52953312-d562-4b31-82a6-eb7558f41e8c/RbrPXqG0D0.lottie\",\n    munchies: \"https://lottie.host/26b32ea3-b141-4fc1-b03b-4124fcb07442/rtN1joojW4.lottie\"\n  };\n\n  React.useEffect(() => {\n    // Load DotLottie script\n    const script = document.createElement('script');\n    script.src = 'https://unpkg.com/@dotlottie/player-component@latest/dist/dotlottie-player.js';\n    script.async = true;\n    script.onload = () => setLottieLoaded(true);\n    document.body.appendChild(script);\n\n    return () => {\n      if (document.body.contains(script)) {\n        document.body.removeChild(script);\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  React.useEffect(() => {\n    // Update Lottie animation when mode changes\n    if (lottieLoaded && lottieContainerRef.current) {\n      // Clear previous content\n      lottieContainerRef.current.innerHTML = '';\n\n      // Create new dotlottie-player element\n      const lottieElement = document.createElement('dotlottie-player');\n      lottieElement.src = lottieAnimations[mode];\n      lottieElement.setAttribute('autoplay', '');\n      lottieElement.setAttribute('loop', '');\n      lottieElement.style.width = '100%';\n      lottieElement.style.height = '100%';\n\n      // Append to container\n      lottieContainerRef.current.appendChild(lottieElement);\n    }\n  }, [mode, lottieLoaded]);\n\n  // Update audio source when selected sound changes\n  React.useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.src = soundOptions[selectedSound].url;\n    }\n  }, [selectedSound]);\n\n  React.useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            // Timer completed\n            clearInterval(interval);\n            playAlarm();\n            handleTimerComplete();\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, minutes, seconds]);\n\n  const playAlarm = () => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.play();\n    }\n  };\n\n  // Test play sound function\n  const testSound = (soundKey) => {\n    setSelectedSound(soundKey);\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n  };\n\n  const handleTimerComplete = () => {\n    setIsActive(false);\n  \n    if (mode === 'work') {\n      const newCycles = cycles + 1;\n      setCycles(newCycles);\n  \n      if (newCycles % cyclesBeforeMunchies === 0) {\n        // Time for munchies break\n        setMode('munchies');\n        setMinutes(munchiesTime);\n        showNotification('Tiempo de Moncha', 'Es hora de tomar un descanso para comer.');\n      } else {\n        // Time for smoke break\n        setMode('smoke');\n        setMinutes(smokeTime);\n        showNotification('Tiempo de Porro', 'Es hora de tomar un descanso para fumar.');\n      }\n    } else {\n      // Back to work after break\n      setMode('work');\n      setMinutes(workTime);\n      showNotification('Tiempo de Cultivo', 'Es hora de volver al trabajo.');\n    }\n  \n    setSeconds(0);\n  };\n\n  const startTimer = () => {\n    setIsActive(true);\n  };\n\n  const pauseTimer = () => {\n    setIsActive(false);\n  };\n\n  const resetTimer = () => {\n    setIsActive(false);\n\n    if (mode === 'work') {\n      setMinutes(workTime);\n    } else if (mode === 'smoke') {\n      setMinutes(smokeTime);\n    } else {\n      setMinutes(munchiesTime);\n    }\n\n    setSeconds(0);\n  };\n\n  const skipToNext = () => {\n    setIsActive(false);\n    handleTimerComplete();\n  };\n\n  const toggleSettings = () => {\n    setShowSettings(!showSettings);\n  };\n\n  const applySettings = () => {\n    // Apply new settings and reset timer\n    if (mode === 'work') {\n      setMinutes(workTime);\n    } else if (mode === 'smoke') {\n      setMinutes(smokeTime);\n    } else {\n      setMinutes(munchiesTime);\n    }\n    setSeconds(0);\n    setShowSettings(false);\n  };\n\n  // Get background color based on current mode\n  const getBgColor = () => {\n    switch(mode) {\n      case 'work': return 'bg-green-400';\n      case 'smoke': return 'bg-purple-400';\n      case 'munchies': return 'bg-yellow-400';\n      default: return 'bg-green-400';\n    }\n  };\n\n  // Get accent color based on current mode\n  const getAccentColor = () => {\n    switch(mode) {\n      case 'work': return 'bg-red-500';\n      case 'smoke': return 'bg-blue-500';\n      case 'munchies': return 'bg-orange-500';\n      default: return 'bg-red-500';\n    }\n  };\n\n  // Get icon based on current mode\n  const getModeIcon = () => {\n    switch(mode) {\n      case 'work': return <span role=\"img\" aria-label=\"work\">🌿</span>;\n      case 'smoke': return <span role=\"img\" aria-label=\"smoke\">🔥</span>;\n      case 'munchies': return <span role=\"img\" aria-label=\"munchies\">🍕</span>;\n      default: return <span role=\"img\" aria-label=\"work\">🌿</span>;\n    }\n  };\n\n  // Format time as MM:SS\n  const formatTime = (min, sec) => {\n    return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className={`min-h-screen ${getBgColor()} text-black font-mono p-4 flex flex-col items-center justify-center`}>\n      {/* Audio element for alarm */}\n      <audio ref={audioRef} src={soundOptions[selectedSound].url} />\n\n      {/* Decorative elements */}\n      <div className=\"absolute top-0 left-0 w-16 h-16 md:w-24 md:h-24 bg-red-500 rotate-45 transform -translate-x-8 -translate-y-8\"></div>\n      <div className=\"absolute bottom-0 right-0 w-16 h-16 md:w-24 md:h-24 bg-yellow-500 rotate-45 transform translate-x-8 translate-y-8\"></div>\n\n      {/* App title */}\n      <div className=\"neo-brutal-box bg-white mb-4 rotate-1\">\n        <h1 className=\"text-4xl md:text-5xl font-black neo-brutal-text\">PORRODORO</h1>\n      </div>\n\n      {/* Lottie Animation Container - Increased size and removed padding */}\n      <div className=\"neo-brutal-box bg-white w-48 h-48 md:w-64 md:h-64 p-0 mb-4 overflow-hidden flex items-center justify-center\">\n        <div ref={lottieContainerRef} className=\"w-full h-full\"></div>\n      </div>\n\n      {/* Mode indicator - Moved up */}\n      <div className={`neo-brutal-box ${getAccentColor()} text-white mb-4 rotate-1`}>\n        <div className=\"text-xl md:text-2xl font-bold\">\n          <span className=\"text-3xl md:text-4xl mr-2\">{getModeIcon()}</span>\n          {mode === 'work' && 'TIEMPO DE CULTIVO'}\n          {mode === 'smoke' && 'TIEMPO DE PORRO'}\n          {mode === 'munchies' && 'TIEMPO DE MONCHA'}\n        </div>\n      </div>\n\n      {/* Timer display */}\n      <div className=\"neo-brutal-box bg-white mb-4 -rotate-1\">\n        <div className=\"text-5xl md:text-6xl font-black\">\n          {formatTime(minutes, seconds)}\n        </div>\n      </div>\n\n      {/* Cycle counter */}\n      <div className=\"neo-brutal-box bg-white mb-4 rotate-1\">\n        <div className=\"font-bold\">\n          CICLO: {cycles % cyclesBeforeMunchies || cyclesBeforeMunchies}/{cyclesBeforeMunchies}\n        </div>\n      </div>\n\n      {/* Control buttons - mobile optimized */}\n      <div className=\"flex flex-wrap justify-center gap-4 mb-4 w-full max-w-xs md:max-w-md\">\n        {!isActive ? (\n          <button\n            onClick={startTimer}\n            className=\"neo-brutal-button bg-green-500 text-white rotate-1\"\n          >\n            INICIAR\n          </button>\n        ) : (\n          <button\n            onClick={pauseTimer}\n            className=\"neo-brutal-button bg-yellow-500 text-black -rotate-1\"\n          >\n            PAUSAR\n          </button>\n        )}\n\n        <button\n          onClick={resetTimer}\n          className=\"neo-brutal-button bg-red-500 text-white rotate-2\"\n        >\n          REINICIAR\n        </button>\n\n        <button\n          onClick={skipToNext}\n          className=\"neo-brutal-button bg-blue-500 text-white -rotate-1\"\n        >\n          SALTAR\n        </button>\n      </div>\n\n      {/* Settings button */}\n<button\n        onClick={toggleSettings}\n        className=\"neo-brutal-button bg-black text-white mb-4 rotate-1\"\n      >\n        <span role=\"img\" aria-label=\"settings\">⚙️</span> CONFIGURACIÓN\n      </button>\n\n      {/* Settings panel - mobile optimized */}\n      {showSettings && (\n        <div className=\"neo-brutal-box bg-white w-full max-w-xs md:max-w-md mb-4 -rotate-1\">\n          <h2 className=\"text-xl mb-4 font-black text-center\">CONFIGURACIÓN</h2>\n\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">TIEMPO DE CULTIVO (MIN)</label>\n            <input\n              type=\"number\"\n              value={workTime}\n              onChange={(e) => setWorkTime(parseInt(e.target.value) || 1)}\n              min=\"1\"\n              max=\"60\"\n              className=\"neo-brutal-input\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">TIEMPO DE PORRO (MIN)</label>\n            <input\n              type=\"number\"\n              value={smokeTime}\n              onChange={(e) => setSmokeTime(parseInt(e.target.value) || 1)}\n              min=\"1\"\n              max=\"30\"\n              className=\"neo-brutal-input\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">TIEMPO DE MONCHA (MIN)</label>\n            <input\n              type=\"number\"\n              value={munchiesTime}\n              onChange={(e) => setMunchiesTime(parseInt(e.target.value) || 1)}\n              min=\"1\"\n              max=\"60\"\n              className=\"neo-brutal-input\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">CICLOS ANTES DE MONCHA</label>\n            <input\n              type=\"number\"\n              value={cyclesBeforeMunchies}\n              onChange={(e) => setCyclesBeforeMunchies(parseInt(e.target.value) || 1)}\n              min=\"1\"\n              max=\"10\"\n              className=\"neo-brutal-input\"\n            />\n          </div>\n\n          {/* Sound selector */}\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">SONIDO DE ALARMA</label>\n            <div className=\"flex flex-col space-y-2\">\n              {Object.keys(soundOptions).map((soundKey) => (\n                <div key={soundKey} className=\"flex items-center\">\n                  <input\n                    type=\"radio\"\n                    id={soundKey}\n                    name=\"alarmSound\"\n                    value={soundKey}\n                    checked={selectedSound === soundKey}\n                    onChange={() => setSelectedSound(soundKey)}\n                    className=\"mr-2 h-5 w-5\"\n                  />\n                  <label htmlFor={soundKey} className=\"mr-2\">{soundOptions[soundKey].name}</label>\n                  <button\n                     onClick={() => testSound(soundKey)}\n                     className=\"ml-auto neo-brutal-button-small bg-purple-400 text-white\"\n                  >\n                    🔊\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"mb-4\">\n            <label className=\"block mb-2 font-bold\">VOLUMEN: {Math.round(volume * 100)}%</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={volume}\n              onChange={(e) => setVolume(parseFloat(e.target.value))}\n              className=\"w-full neo-brutal-range\"\n            />\n          </div>\n\n          <button\n            onClick={applySettings}\n            className=\"neo-brutal-button bg-green-500 text-white w-full rotate-1\"\n          >\n            APLICAR\n          </button>\n        </div>\n      )}\n\n      {/* Add neobrutalism style */}\n      <style>\n        {`\n          @import url('https://fonts.googleapis.com/css2?family=Rubik:wght@900&display=swap');\n\n          * {\n            font-family: 'Rubik', sans-serif;\n          }\n\n          .neo-brutal-text {\n            -webkit-text-stroke: 2px black;\n            letter-spacing: 1px;\n          }\n\n          .neo-brutal-box {\n            border: 3px solid black;\n            box-shadow: 5px 5px 0px 0px rgba(0,0,0,1);\n            padding: 0.75rem 1.5rem;\n            margin: 0.5rem;\n            transform-origin: center;\n            transition: transform 0.2s ease;\n          }\n\n          .neo-brutal-box:hover {\n            transform: translateY(-2px) rotate(0deg) !important;\n          }\n\n          .neo-brutal-button {\n            border: 3px solid black;\n            box-shadow: 5px 5px 0px 0px rgba(0,0,0,1);\n            padding: 0.75rem 1.5rem;\n            margin: 0.5rem;\n            font-weight: 900;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            transform-origin: center;\n            transition: transform 0.1s ease, box-shadow 0.1s ease;\n            min-width: 120px;\n            text-align: center;\n          }\n\n          .neo-brutal-button-small {\n            border: 2px solid black;\n            box-shadow: 3px 3px 0px 0px rgba(0,0,0,1);\n            padding: 0.25rem 0.5rem;\n            font-weight: 900;\n            transform-origin: center;\n            transition: transform 0.1s ease, box-shadow 0.1s ease;\n            min-width: 40px;\n            text-align: center;\n          }\n\n          .neo-brutal-button:hover, .neo-brutal-button-small:hover {\n            transform: translateY(-2px) rotate(0deg) !important;\n          }\n\n          .neo-brutal-button:active, .neo-brutal-button-small:active {\n            transform: translateY(3px) !important;\n            box-shadow: 2px 2px 0px 0px rgba(0,0,0,1);\n          }\n\n          .neo-brutal-input {\n            width: 100%;\n            padding: 0.5rem;\n            border: 3px solid black;\n            box-shadow: 3px 3px 0px 0px rgba(0,0,0,1);\n            font-weight: bold;\n            font-family: monospace;\n          }\n\n          .neo-brutal-range {\n            -webkit-appearance: none;\n            height: 15px;\n            border: 3px solid black;\n            box-shadow: 3px 3px 0px 0px rgba(0,0,0,1);\n          }\n\n          .neo-brutal-range::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 25px;\n            height: 25px;\n            background: black;\n            border: 3px solid black;\n            cursor: pointer;\n          }\n\n          @keyframes float {\n            0% { transform: translateY(0px); }\n            50% { transform: translateY(-10px); }\n            100% { transform: translateY(0px); }\n          }\n\n          .float-animation {\n            animation: float 3s ease-in-out infinite;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// Registrar el Service Worker para PWA\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then(registration => {\n        console.log('SW registered: ', registration);\n      }).catch(registrationError => {\n        console.log('SW registration failed: ', registrationError);\n      });\n  });\n}"],"sourceRoot":""}